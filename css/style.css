/* Custom Properties */
:root {
    --fuenteHeading: 'PT Sans', sans-serif;
    --fuenteParrafos: 'Open Sans', sans-serif;

    --primario: #784D3C;
    --gris: #e1e1e1;
    --blanco: #ffffff;
    --negro: #000000;
}

html {
    box-sizing: border-box; /* para hacer que los borders, paddings, etc, no afecten al tamaño de nuestros elementos */
    font-size: 62.5%;
}
*,*::before, *::after {
    box-sizing: inherit; 
}
body {
    font-family: var(--fuenteParrafos);
    font-size: 1.6rem;
    line-height: 2; /* interlineado */
}

/* Globales */
.contenedor {
    /* max-width: 120rem;
    width: 90%; Hace la misma funcion que la linea de abajo. Coge el valor que sea mas pequeño, el minimo de los dos. */
    width: min(90%, 120rem);
    margin: 0 auto;
}
a {
    text-decoration: none;
}
h1, h2, h3, h4 {
    font-family: var(--fuenteHeading);
    line-height: 1.2;
}
h1 {
    font-size: 4.8rem;
    margin: 0;
}
h2 {
    font-size: 4rem;
}h3 {
    font-size: 3.2rem;
}h4 {
    font-size: 2.8rem;
}
img {
    max-width: 100%;
}

/* Utilidades */
.no-margin {
    margin: 0; /* para eliminar el margen que tienen los headings por defecto */
}
.no-padding {
    padding: 0;
}
.centrar-texto {
    text-align: center;
}

/* Header */
.webp .header {
    background-image: url(../img/banner.webp);
}
.no-webp .header {
    background-image: url(../img/banner.jpg);
}
.header {
    height: 60rem; /* altura de la imagen */
    background-size: cover; /* para que la imagen tome todo el espacio disponible */
    background-repeat: no-repeat; /* para que no se repita la imagen en el fondo */
    background-position: center center; /* para que cuando se modifique el tamaño de la ventana, se vea en todo momento el centro de la imagen, horizontalmente (primer "center") y verticalmente (segundo "center") */
}
.header__texto {
    text-align: center;
    color: var(--blanco);
    margin-top: 5rem;
}
@media (min-width: 768px) {
    .header__texto {
        margin-top: 15rem;
    }
}
.barra {
    padding-top: 4rem;
}
@media (min-width: 768px) {
    .barra {
        display: flex;
        justify-content: space-between;
        align-items: center; /* para alinear verticalmente, ya que estamos usando justify-content para alinear horizontalmente */
    }
}
.logo {
    color: var(--blanco);
}
.logo__nombre {
    font-weight: 400;
}
.logo__bold {
    font-weight: 700;
}
@media (min-width: 768px) {
   .navegacion {
        display: flex;
        gap: 2rem;
   } 
}
.navegacion__enlace {
    display: block; /* para que los elementos esten uno debajo del otro */
    text-align: center;
    color: var(--blanco);
    font-size: 1.8rem;
}

@media (min-width: 768px) {
    .contenido-principal {
        display: grid;
        grid-template-columns: 2fr 1fr;
        column-gap: 4rem;
    }
}

.entrada {
    border-bottom: 1px solid var(--gris);
    margin-bottom: 2rem;
}
.entrada:last-of-type {
    border: none;
    margin: 0;
}
.boton {
    display: block;
    font-family: var(--fuenteHeading);
    color: var(--blanco);
    text-align:  center;
    padding: 1rem 3rem;
    font-size: 1.8rem;
    text-transform: uppercase;
    font-weight: 700; /* asi lo hacemos negrita */
    margin-bottom: 2rem;
    border: none;
}
@media (min-width: 768px) {
    .boton {
        display: inline-block; /* solo la propiedad inline es inmune a los margin y los width, para que les afecte debemos aplicarle el inline-block */

    }
}
.boton:hover {
    cursor: pointer;
}
.boton--primario {
    background-color: var(--negro);
}
.boton--secundario{
    background-color: var(--primario);
}

.cursos {
    list-style: none; /* para quitar los puntos que salen por defecto para listar los componentes */
}

.widget-curso {
    border-bottom: 1px solid var(--gris);
    margin-bottom: 2rem;
}
.widget-curso:last-of-type {
    border: none;
    margin-bottom: 0;
}

.widget-curso__label,
.curso__label {
    font-family: var(--fuenteHeading);
    font-weight: 700;
}
.widget-curso__info,
.cursos__info {
    font-weight: 400; /* 400 == regular, 700 == bold */
}
.widget-curso__label,
.widget-curso__info,
.curso__label,
.cursos__info {
    font-size: 2rem;
}

/* Footer */
.footer {
    background-color: var(--negro);
    padding-bottom: 3rem;
    margin-top: 4rem;
}

/* Nosotros */
@media (min-width: 768px) {
    /*.sobre-nosotros { misma funcionalidad que la clase .sobre-nosotros usando CSS grid pero con mas lineas y usando FlexBox
        display: flex;
        gap: 2rem;
    }
    .sobre-nosotros__imagen,
    .sobre-nosotros__texto {
        flex-basis: 50%;  para que cada una de las clases ocupe el 50% del espacio 
    }*/

    .sobre-nosotros {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        column-gap: 2rem;
    }
}

/* Cursos */
.curso {
    padding: 3rem 0;
    border-bottom: 1px solid var(--gris);
}
@media (min-width: 768px) {
    .curso {
        display:grid;
        grid-template-columns: 1fr 2fr;
        column-gap: 2rem;
    }
}
.curso:last-of-type {
    border-bottom: none;
}

/* Contacto */
.contacto-bg {
    background-image: url(/img/contacto.jpg);
    width: auto;
    height: 40%;
    background-size: cover;
    background-repeat: no-repeat;
}

.formulario {
    background-color: var(--blanco);
    margin: -5rem auto 0 auto; /* 5rem hacia arriba */
    width: 95%;
    padding: 5rem;
    z-index: 1000;

}
.campo {
    display: flex; /* esta declaracion debe hacerse siempre en la clase padre, aunque luego la utilicemos en las clases hijas */  
    margin-bottom: 2rem;
    gap: 2rem;
}
.campo__label {
    flex: 0 0 9rem; /* factor de crecimiento - lo pequeño que se puede hacer - tamaño base (width) */  
    text-align: right;
}
.campo__field {
    flex: 1; /* factor de crecimiento. Por cada 0 px del label, el field va a recibir 1px, es decir, en este caso si el label va a ocupar 9rem, todo el espacio disponible restante lo va a ocupar el field */
    border: 1px solid var(--gris);
}
.campo__field--textarea {
    height: 20rem;
}